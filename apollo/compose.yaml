services:
  home-assistant:
    container_name: home-assistant
    image: ghcr.io/home-assistant/home-assistant:stable
    restart: unless-stopped
    network_mode: host
    privileged: true
    env_file: .env
    volumes:
      - ./home-assistant:/config
    logging:
      driver: "none"

  homebridge:
    container_name: homebridge
    image: homebridge/homebridge:latest
    restart: unless-stopped
    network_mode: host
    volumes:
      - ./homebridge:/homebridge
    logging:
      driver: "none"

  scrypted:
    container_name: scrypted
    image: ghcr.io/koush/scrypted
    restart: unless-stopped
    network_mode: host
    env_file: .env
    environment:
      - SCRYPTED_WEBHOOK_UPDATE_AUTHORIZATION=Bearer ${SCRYPTED_TOKEN}
      - SCRYPTED_WEBHOOK_UPDATE=http://localhost:10444/v1/update
    volumes:
      - ./scrypted/volume:/server/volume
    logging:
      driver: "none"
    labels:
      - "com.centurylinklabs.watchtower.scope=scrypted"

  watchtower:
    container_name: scrypted-watchtower
    image: containrrr/watchtower
    restart: unless-stopped
    environment:
      - WATCHTOWER_HTTP_API_TOKEN=${SCRYPTED_TOKEN}
      - WATCHTOWER_HTTP_API_UPDATE=true
      - WATCHTOWER_SCOPE=scrypted
      - WATCHTOWER_HTTP_API_PERIODIC_POLLS=true
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    command: --interval 3600 --cleanup --scope scrypted
    ports:
      - 10444:8080
    labels:
      - "com.centurylinklabs.watchtower.scope=scrypted"

  tailscale:
    container_name: tailscale
    hostname: tailscale
    image: tailscale/tailscale:stable
    restart: unless-stopped
    network_mode: host
    environment:
      - TS_AUTHKEY=${TS_AUTHKEY}
      - TS_ROUTES=${TS_ROUTES}
      - TS_EXTRA_ARGS=--accept-routes
    volumes:
      - ./tailscale:/var/lib
      - /dev/net/tun:/dev/net/tun
    cap_add:
      - net_admin
      - sys_module
